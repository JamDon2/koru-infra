alertmanager:
  alertmanagerSpec:
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: longhorn
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 1Gi
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: traefik
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
      traefik.ingress.kubernetes.io/router.middlewares: default-redirect-https@kubernetescrd,monitoring-prometheus-basic-auth-middleware@kubernetescrd
    hosts:
      - alertmanager.koru.cash
    tls:
      - secretName: alertmanager-tls
        hosts:
          - alertmanager.koru.cash
grafana:
  admin:
    existingSecret: prometheus-stack-auth
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: traefik
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
      traefik.ingress.kubernetes.io/router.middlewares: default-redirect-https@kubernetescrd
    hosts:
      - grafana.koru.cash
    tls:
      - secretName: grafana-tls
        hosts:
          - grafana.koru.cash
  persistence:
    enabled: true
    storageClassName: longhorn
    accessModes: ["ReadWriteOnce"]
    size: 5Gi
prometheus:
  prometheusSpec:
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: longhorn
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 50Gi
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: traefik
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
      traefik.ingress.kubernetes.io/router.middlewares: default-redirect-https@kubernetescrd,monitoring-prometheus-basic-auth-middleware@kubernetescrd
    hosts:
      - prometheus.koru.cash
    tls:
      - secretName: prometheus-tls
        hosts:
          - prometheus.koru.cash
